# =============================================================================
# FASTBITE PRODUCTION ENVIRONMENT VARIABLES
# =============================================================================
# Use this template for Coolify deployment
# Copy these variables to your Coolify dashboard

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
NODE_ENV=production
NEXT_PUBLIC_BASE_URL=https://your-domain.com
NEXT_PUBLIC_APP_NAME=FastBite
NEXT_PUBLIC_APP_DESCRIPTION=Delicious Meals Delivered Fast
DOMAIN=your-domain.com
PORT=3000

# Disable Next.js telemetry in production
NEXT_TELEMETRY_DISABLED=1

# =============================================================================
# IMAGEKIT IMAGE MANAGEMENT
# =============================================================================
# Get these from: https://imagekit.io/dashboard
NEXT_PUBLIC_IMAGEKIT_PUBLIC_KEY=public_xxxxxxxxxxxxxxxxxxxxx
IMAGEKIT_PRIVATE_KEY=private_xxxxxxxxxxxxxxxxxxxxx
NEXT_PUBLIC_IMAGEKIT_URL_ENDPOINT=https://ik.imagekit.io/your_imagekit_id/

# =============================================================================
# CONVEX BACKEND (PRODUCTION)
# =============================================================================
# Option 1: Self-Hosted Convex (if you're using your own Convex instance)
# Get these from your self-hosted Convex backend
NEXT_PUBLIC_CONVEX_URL=https://backend.usa-solarenergy.com
CONVEX_SELF_HOSTED_URL=https://backend.usa-solarenergy.com
CONVEX_SELF_HOSTED_ADMIN_KEY=your-self-hosted-admin-key
CONVEX_WEBHOOK_SIGNING_SECRET=your-webhook-signing-secret

# Option 2: Convex Cloud (if using hosted Convex)
# Get these from: https://dashboard.convex.dev
# NEXT_PUBLIC_CONVEX_URL=https://your-production-deployment.convex.cloud
# CONVEX_DEPLOYMENT=prod:your-deployment-name

# =============================================================================
# LOGTO AUTHENTICATION (PRODUCTION)
# =============================================================================
# Get these from: https://cloud.logto.io
LOGTO_ENDPOINT=https://your-tenant.logto.app
LOGTO_APP_ID=your-production-app-id
LOGTO_APP_SECRET=your-production-app-secret
NEXT_PUBLIC_LOGTO_ENDPOINT=https://your-tenant.logto.app
LOGTO_SCOPES=openid,profile,email,roles,custom_data

# IMPORTANT: Configure these callback URLs in Logto dashboard:
# - Redirect URI: https://your-domain.com/callback
# - Post Logout URI: https://your-domain.com

# =============================================================================
# PAYSTACK PAYMENT PROCESSING (PRODUCTION)
# =============================================================================
# Get these from: https://dashboard.paystack.com
# IMPORTANT: Use LIVE keys in production, not TEST keys
PAYSTACK_SECRET_KEY=paystack-secret-key-placeholder
NEXT_PUBLIC_PAYSTACK_PUBLIC_KEY=paystack-public-key-placeholder

# IMPORTANT: Configure webhook in Paystack dashboard:
# - URL: https://your-domain.com/api/webhooks/paystack
# - Events: charge.success, charge.failed, transfer.success, transfer.failed

# =============================================================================
# EMAIL CONFIGURATION (SMTP)
# =============================================================================
# Option 1: Gmail (use App Password, not regular password)
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USER=your-email@gmail.com
SMTP_PASS=your-16-digit-app-password

# Option 2: SendGrid
# SMTP_HOST=smtp.sendgrid.net
# SMTP_PORT=587
# SMTP_USER=apikey
# SMTP_PASS=SG.xxxxxxxxxxxxxxxxxxxxx

# Email sender configuration
FROM_EMAIL=noreply@your-domain.com
FROM_NAME=FastBite

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Generate a secure random string (minimum 32 characters)
# Use: openssl rand -base64 32
JWT_SECRET=your-super-secure-random-jwt-secret-minimum-32-characters-long

# CORS configuration
CORS_ORIGIN=https://your-domain.com

# =============================================================================
# OPTIONAL: ANALYTICS & MONITORING
# =============================================================================
# Google Analytics
# NEXT_PUBLIC_GA_TRACKING_ID=G-XXXXXXXXXX

# Sentry Error Tracking
# SENTRY_DSN=https://xxxxxxxxxxxxxxxxxxxxx@sentry.io/xxxxxxx
# SENTRY_ENVIRONMENT=production

# =============================================================================
# OPTIONAL: FEATURE FLAGS
# =============================================================================
NEXT_PUBLIC_ENABLE_DEBUG=false
NEXT_PUBLIC_ENABLE_ANALYTICS=true

# =============================================================================
# DEPLOYMENT CHECKLIST
# =============================================================================
# Before deploying to production:
# [ ] All API keys are PRODUCTION keys (not test/development)
# [ ] JWT_SECRET is a strong, unique random string
# [ ] All callback URLs configured in external services:
#     - Logto: Redirect and Post Logout URIs
#     - Paystack: Webhook URL
# [ ] DNS configured and pointing to Coolify server
# [ ] SSL certificate will be auto-generated by Coolify
# [ ] Environment variables added to Coolify dashboard
# [ ] Test all integrations after first deployment
# [ ] Set up monitoring and alerts
# [ ] Configure backups (Convex handles this automatically)
# [ ] Review security settings
# [ ] Disable debug mode and enable analytics

# =============================================================================
# SECURITY REMINDERS
# =============================================================================
# 1. NEVER commit this file with real values to version control
# 2. Use different secrets for staging and production
# 3. Rotate secrets regularly (every 90 days recommended)
# 4. Store backup of secrets in secure vault (1Password, AWS Secrets Manager)
# 5. Limit access to production environment variables
# 6. Monitor for unauthorized access
# 7. Use principle of least privilege for API keys
# 8. Enable 2FA on all service accounts
